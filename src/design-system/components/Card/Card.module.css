/* Card component styles */
.card {
  background: linear-gradient(135deg, 
    rgba(255,255,255,0.03) 0%, 
    rgba(255,255,255,0.01) 100%
  );
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  padding: var(--spacing-lg);
  transition: all var(--duration-base) var(--ease-out);
  position: relative;
  overflow: hidden;
}

.card--elevated {
  box-shadow: var(--shadow-sm);
}

.card--outlined {
  background: transparent;
  border: 2px solid var(--border);
}

.card--interactive {
  cursor: pointer;
}

.card--interactive:hover {
  border-color: var(--border-strong);
  background: linear-gradient(135deg, 
    rgba(255,255,255,0.05) 0%, 
    rgba(255,255,255,0.02) 100%
  );
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.card--interactive:focus-visible {
  outline: 2px solid var(--ink-muted);
  outline-offset: 2px;
}

/* Scan-line effect */
.card--interactive::before {
  content: '';
  position: absolute;
  inset: 0 -100% 0 auto;
  width: 100%;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--ink), transparent);
  transition: inset 600ms ease;
  opacity: 0;
}

.card--interactive:hover::before {
  inset: 0 auto 0 -100%;
  opacity: 1;
}

/* Loading state */
.card--loading {
  pointer-events: none;
}

.skeleton {
  animation: pulse 2s ease-in-out infinite;
}

.skeletonHeader {
  height: 20px;
  background: var(--surface-lift);
  border-radius: var(--radius-sm);
  margin-bottom: var(--spacing-md);
  width: 40%;
}

.skeletonContent {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.skeletonLine {
  height: 14px;
  background: var(--surface-lift);
  border-radius: var(--radius-sm);
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

/* Sub-components */
.cardHeader {
  margin-bottom: var(--spacing-lg);
}

.cardContent {
  flex: 1;
}

.cardFooter {
  margin-top: var(--spacing-lg);
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: var(--spacing-md);
}